/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JFrame.java to edit this template
 */
package frontend;

import backend.Product;
import java.awt.List;
import javax.swing.table.DefaultTableModel;


public class ViewProducts extends javax.swing.JFrame implements Node {
    
    private Navigation windowNavigation;
    private Node parent;
    private Product[] Products;
            
    public ViewProducts(Navigation windowNavigation ,Node parent , Product[] Products) {
        initComponents();
        this.parent=parent;
        this.windowNavigation=windowNavigation;
        this.Products=Products;
        this.setTitle("View Products");
        this.setTableData();
       
        }
    private void setTableData()
    {
         String[][] tableData = new String[Products.length][6];
        for(int i = 0 ;i <Products.length ; i++)
            {
         tableData[i] = Products[i].lineRepresentation().split(",");
             }
         ProductsTable.setModel(new DefaultTableModel (tableData,new String[] {"Product ID","Product Name","Manufacturer Name","Supplier Name","Quantity","Price $"}){
        @Override
        public boolean isCellEditable(int row, int column){
           return false; 
        }}
        );    
    }

       
    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
                 
    
   @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jScrollPane1 = new javax.swing.JScrollPane();
        ProductsTable = new javax.swing.JTable();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        ProductsTable.setBackground(new java.awt.Color(204, 204, 204));
        ProductsTable.setBorder(javax.swing.BorderFactory.createTitledBorder(""));
        ProductsTable.setFont(new java.awt.Font("Times New Roman", 0, 14)); // NOI18N
        ProductsTable.addComponentListener(new java.awt.event.ComponentAdapter() {
            public void componentShown(java.awt.event.ComponentEvent evt) {
                ProductsTableComponentShown(evt);
            }
        });
        ProductsTable.addPropertyChangeListener(new java.beans.PropertyChangeListener() {
            public void propertyChange(java.beans.PropertyChangeEvent evt) {
                ProductsTablePropertyChange(evt);
            }
        });
        jScrollPane1.setViewportView(ProductsTable);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jScrollPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 731, Short.MAX_VALUE)
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 288, Short.MAX_VALUE)
                .addContainerGap())
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void ProductsTableComponentShown(java.awt.event.ComponentEvent evt) {//GEN-FIRST:event_ProductsTableComponentShown
        // TODO add your handling code here:
    }//GEN-LAST:event_ProductsTableComponentShown

    private void ProductsTablePropertyChange(java.beans.PropertyChangeEvent evt) {//GEN-FIRST:event_ProductsTablePropertyChange
        // TODO add your handling code here:
    }//GEN-LAST:event_ProductsTablePropertyChange


    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(ViewProducts.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(ViewProducts.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(ViewProducts.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(ViewProducts.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            @Override
            public void run() {
                new ViewProducts(null,null,null).setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JTable ProductsTable;
    private javax.swing.JScrollPane jScrollPane1;
    // End of variables declaration//GEN-END:variables

    @Override
    public Node getParentNode() {
       return this.parent;
    }
}
